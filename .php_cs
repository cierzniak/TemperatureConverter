<?php

$finder = PhpCsFixer\Finder::create()
    ->in(__DIR__)
    ->exclude('bin')
    ->exclude('var')
    ->exclude('vendor')
    ->exclude('web')
    ->notPath('/var/SymfonyRequirements.php')
    ->notPath('/web/config.php');

return PhpCsFixer\Config::create()
    ->setIndent("    ")
    ->setLineEnding("\n")
    ->setRules([
        'align_multiline_comment' => [
            'comment_type' => 'phpdocs_only',
        ],
        'array_syntax' => [
            'syntax' => 'short',
        ],
        'binary_operator_spaces' => [
            'align_double_arrow' => false,
            'align_equals' => false,
        ],
        'blank_line_after_namespace' => true,
        'blank_line_after_opening_tag' => true,
        'blank_line_before_return' => false,
        'blank_line_before_statement' => [
            'statements' => [
                'return',
            ],
        ],
        'braces' => [
            'allow_single_line_closure' => false,
            'position_after_anonymous_constructs' => 'same',
            'position_after_control_structures' => 'same',
            'position_after_functions_and_oop_constructs' => 'next',
        ],
        'cast_spaces' => [
            'space' => 'single',
        ],
        'class_definition' => [
            'multiLineExtendsEachSingleLine' => false,
            'singleItemSingleLine' => false,
            'singleLine' => false,
        ],
        'class_keyword_remove' => false,
        'combine_consecutive_unsets' => true,
        'concat_space' => [
            'spacing' => 'none',
        ],
        'declare_equal_normalize' => [
            'space' => 'single',
        ],
        'declare_strict_types' => false,
        'dir_constant' => false,
        'doctrine_annotation_array_assignment' => [
            'ignored_tags' => [
                'abstract',
                'access',
                'code',
                'deprec',
                'encode',
                'exception',
                'final',
                'ingroup',
                'inheritdoc',
                'inheritDoc',
                'magic',
                'name',
                'toc',
                'tutorial',
                'private',
                'static',
                'staticvar',
                'staticVar',
                'throw',
                'api',
                'author',
                'category',
                'copyright',
                'deprecated',
                'example',
                'filesource',
                'global',
                'ignore',
                'internal',
                'license',
                'link',
                'method',
                'package',
                'param',
                'property',
                'property-read',
                'property-write',
                'return',
                'see',
                'since',
                'source',
                'subpackage',
                'throws',
                'todo',
                'TODO',
                'usedBy',
                'uses',
                'var',
                'version',
                'after',
                'afterClass',
                'backupGlobals',
                'backupStaticAttributes',
                'before',
                'beforeClass',
                'codeCoverageIgnore',
                'codeCoverageIgnoreStart',
                'codeCoverageIgnoreEnd',
                'covers',
                'coversDefaultClass',
                'coversNothing',
                'dataProvider',
                'depends',
                'expectedException',
                'expectedExceptionCode',
                'expectedExceptionMessage',
                'expectedExceptionMessageRegExp',
                'group',
                'large',
                'medium',
                'preserveGlobalState',
                'requires',
                'runTestsInSeparateProcesses',
                'runInSeparateProcess',
                'small',
                'test',
                'testdox',
                'ticket',
                'uses',
                'SuppressWarnings',
                'noinspection',
                'package_version',
                'enduml',
                'startuml',
                'fix',
                'FIXME',
                'fixme',
                'override',
            ],
            'operator' => '=',
        ],
        'doctrine_annotation_braces' => [
            'ignored_tags' => [
                'abstract',
                'access',
                'code',
                'deprec',
                'encode',
                'exception',
                'final',
                'ingroup',
                'inheritdoc',
                'inheritDoc',
                'magic',
                'name',
                'toc',
                'tutorial',
                'private',
                'static',
                'staticvar',
                'staticVar',
                'throw',
                'api',
                'author',
                'category',
                'copyright',
                'deprecated',
                'example',
                'filesource',
                'global',
                'ignore',
                'internal',
                'license',
                'link',
                'method',
                'package',
                'param',
                'property',
                'property-read',
                'property-write',
                'return',
                'see',
                'since',
                'source',
                'subpackage',
                'throws',
                'todo',
                'TODO',
                'usedBy',
                'uses',
                'var',
                'version',
                'after',
                'afterClass',
                'backupGlobals',
                'backupStaticAttributes',
                'before',
                'beforeClass',
                'codeCoverageIgnore',
                'codeCoverageIgnoreStart',
                'codeCoverageIgnoreEnd',
                'covers',
                'coversDefaultClass',
                'coversNothing',
                'dataProvider',
                'depends',
                'expectedException',
                'expectedExceptionCode',
                'expectedExceptionMessage',
                'expectedExceptionMessageRegExp',
                'group',
                'large',
                'medium',
                'preserveGlobalState',
                'requires',
                'runTestsInSeparateProcesses',
                'runInSeparateProcess',
                'small',
                'test',
                'testdox',
                'ticket',
                'uses',
                'SuppressWarnings',
                'noinspection',
                'package_version',
                'enduml',
                'startuml',
                'fix',
                'FIXME',
                'fixme',
                'override',
            ],
            'syntax' => 'without_braces',
        ],
        'doctrine_annotation_indentation' => [
            'ignored_tags' => [
                'abstract',
                'access',
                'code',
                'deprec',
                'encode',
                'exception',
                'final',
                'ingroup',
                'inheritdoc',
                'inheritDoc',
                'magic',
                'name',
                'toc',
                'tutorial',
                'private',
                'static',
                'staticvar',
                'staticVar',
                'throw',
                'api',
                'author',
                'category',
                'copyright',
                'deprecated',
                'example',
                'filesource',
                'global',
                'ignore',
                'internal',
                'license',
                'link',
                'method',
                'package',
                'param',
                'property',
                'property-read',
                'property-write',
                'return',
                'see',
                'since',
                'source',
                'subpackage',
                'throws',
                'todo',
                'TODO',
                'usedBy',
                'uses',
                'var',
                'version',
                'after',
                'afterClass',
                'backupGlobals',
                'backupStaticAttributes',
                'before',
                'beforeClass',
                'codeCoverageIgnore',
                'codeCoverageIgnoreStart',
                'codeCoverageIgnoreEnd',
                'covers',
                'coversDefaultClass',
                'coversNothing',
                'dataProvider',
                'depends',
                'expectedException',
                'expectedExceptionCode',
                'expectedExceptionMessage',
                'expectedExceptionMessageRegExp',
                'group',
                'large',
                'medium',
                'preserveGlobalState',
                'requires',
                'runTestsInSeparateProcesses',
                'runInSeparateProcess',
                'small',
                'test',
                'testdox',
                'ticket',
                'uses',
                'SuppressWarnings',
                'noinspection',
                'package_version',
                'enduml',
                'startuml',
                'fix',
                'FIXME',
                'fixme',
                'override',
            ],
            'indent_mixed_lines' => false,
        ],
        'doctrine_annotation_spaces' => [
            'after_argument_assignments' => false,
            'after_array_assignments_colon' => true,
            'after_array_assignments_equals' => true,
            'around_argument_assignments' => true,
            'around_array_assignments' => true,
            'around_commas' => true,
            'around_parentheses' => true,
            'before_argument_assignments' => false,
            'before_array_assignments_colon' => true,
            'before_array_assignments_equals' => true,
            'ignored_tags' => [
                'abstract',
                'access',
                'code',
                'deprec',
                'encode',
                'exception',
                'final',
                'ingroup',
                'inheritdoc',
                'inheritDoc',
                'magic',
                'name',
                'toc',
                'tutorial',
                'private',
                'static',
                'staticvar',
                'staticVar',
                'throw',
                'api',
                'author',
                'category',
                'copyright',
                'deprecated',
                'example',
                'filesource',
                'global',
                'ignore',
                'internal',
                'license',
                'link',
                'method',
                'package',
                'param',
                'property',
                'property-read',
                'property-write',
                'return',
                'see',
                'since',
                'source',
                'subpackage',
                'throws',
                'todo',
                'TODO',
                'usedBy',
                'uses',
                'var',
                'version',
                'after',
                'afterClass',
                'backupGlobals',
                'backupStaticAttributes',
                'before',
                'beforeClass',
                'codeCoverageIgnore',
                'codeCoverageIgnoreStart',
                'codeCoverageIgnoreEnd',
                'covers',
                'coversDefaultClass',
                'coversNothing',
                'dataProvider',
                'depends',
                'expectedException',
                'expectedExceptionCode',
                'expectedExceptionMessage',
                'expectedExceptionMessageRegExp',
                'group',
                'large',
                'medium',
                'preserveGlobalState',
                'requires',
                'runTestsInSeparateProcesses',
                'runInSeparateProcess',
                'small',
                'test',
                'testdox',
                'ticket',
                'uses',
                'SuppressWarnings',
                'noinspection',
                'package_version',
                'enduml',
                'startuml',
                'fix',
                'FIXME',
                'fixme',
                'override',
            ],
        ],
        'elseif' => true,
        'encoding' => true,
        'ereg_to_preg' => false,
        'full_opening_tag' => true,
        'function_declaration' => [
            'closure_function_spacing' => 'one',
        ],
        'function_to_constant' => false,
        'function_typehint_space' => true,
        'general_phpdoc_annotation_remove' => [
            'annotations' => [],
        ],
        'header_comment' => [
            'commentType' => 'comment',
            'header' => '',
            'location' => 'after_declare_strict',
            'separate' => 'both',
        ],
        'heredoc_to_nowdoc' => false,
        'include' => true,
        'indentation_type' => true,
        'is_null' => false,
        'line_ending' => true,
        'linebreak_after_opening_tag' => true,
        'list_syntax' => [
            'syntax' => 'long',
        ],
        'lowercase_cast' => true,
        'lowercase_constants' => true,
        'lowercase_keywords' => true,
        'magic_constant_casing' => true,
        'mb_str_functions' => false,
        'method_argument_space' => [
            'ensure_fully_multiline' => false,
            'keep_multiple_spaces_after_comma' => false,
        ],
        'method_separation' => true,
        'modernize_types_casting' => true,
        'native_function_casing' => true,
        'native_function_invocation' => false,
        'new_with_braces' => true,
        'no_alias_functions' => false,
        'no_blank_lines_after_class_opening' => true,
        'no_blank_lines_after_phpdoc' => true,
        'no_blank_lines_before_namespace' => false,
        'no_break_comment' => [
            'comment_text' => 'no break',
        ],
        'no_closing_tag' => true,
        'no_empty_comment' => true,
        'no_empty_phpdoc' => true,
        'no_empty_statement' => true,
        'no_extra_consecutive_blank_lines' => [
            'tokens' => [
                'extra',
            ],
        ],
        'no_leading_import_slash' => true,
        'no_leading_namespace_whitespace' => true,
        'no_mixed_echo_print' => [
            'use' => 'print',
        ],
        'no_multiline_whitespace_around_double_arrow' => true,
        'no_multiline_whitespace_before_semicolons' => false,
        'no_null_property_initialization' => false,
        'no_php4_constructor' => true,
        'no_short_bool_cast' => true,
        'no_short_echo_tag' => true,
        'no_singleline_whitespace_before_semicolons' => true,
        'no_spaces_after_function_name' => true,
        'no_spaces_around_offset' => [
            'positions' => [
                'inside',
                'outside',
            ],
        ],
        'no_spaces_inside_parenthesis' => true,
        'no_superfluous_elseif' => false,
        'no_trailing_comma_in_list_call' => true,
        'no_trailing_comma_in_singleline_array' => true,
        'no_trailing_whitespace' => true,
        'no_trailing_whitespace_in_comment' => true,
        'no_unneeded_control_parentheses' => [
            'statements' => [
                'break',
                'clone',
                'continue',
                'echo_print',
                'return',
                'switch_case',
                'yield',
            ],
        ],
        'no_unneeded_curly_braces' => false,
        'no_unneeded_final_method' => false,
        'no_unreachable_default_argument_value' => false,
        'no_unused_imports' => true,
        'no_useless_else' => true,
        'no_useless_return' => true,
        'no_whitespace_before_comma_in_array' => true,
        'no_whitespace_in_blank_line' => true,
        'non_printable_character' => [
            'use_escape_sequences_in_strings' => false,
        ],
        'normalize_index_brace' => true,
        'not_operator_with_space' => false,
        'not_operator_with_successor_space' => false,
        'object_operator_without_whitespace' => true,
        'ordered_class_elements' => [
            'order' => [
                'use_trait',
                'constant_public',
                'constant_protected',
                'constant_private',
                'property_public',
                'property_protected',
                'property_private',
                'construct',
                'destruct',
                'magic',
                'phpunit',
                'method_public',
                'method_protected',
                'method_private',
            ],
        ],
        'ordered_imports' => [
            'importsOrder' => null,
            'sortAlgorithm' => 'alpha',
        ],
        'php_unit_construct' => false,
        'php_unit_dedicate_assert' => [
            'functions' => [
                'array_key_exists',
                'empty',
                'file_exists',
                'is_infinite',
                'is_nan',
                'is_null',
                'is_array',
                'is_bool',
                'is_boolean',
                'is_callable',
                'is_double',
                'is_float',
                'is_int',
                'is_integer',
                'is_long',
                'is_numeric',
                'is_object',
                'is_real',
                'is_resource',
                'is_scalar',
                'is_string',
            ],
        ],
        'php_unit_fqcn_annotation' => true,
        'php_unit_strict' => false,
        'php_unit_test_class_requires_covers' => false,
        'phpdoc_add_missing_param_annotation' => [
            'only_untyped' => false,
        ],
        'phpdoc_align' => [
            'tags' => [
                'param',
                'return',
                'throws',
                'type',
                'var',
            ],
        ],
        'phpdoc_annotation_without_dot' => true,
        'phpdoc_indent' => true,
        'phpdoc_inline_tag' => true,
        'phpdoc_no_access' => true,
        'phpdoc_no_alias_tag' => [
            'replacements' => [
                'property-read' => 'property',
                'property-write' => 'property',
                'type' => 'var',
                'link' => 'see',
            ],
        ],
        'phpdoc_no_empty_return' => true,
        'phpdoc_no_package' => true,
        'phpdoc_no_useless_inheritdoc' => true,
        'phpdoc_return_self_reference' => true,
        'phpdoc_order' => true,
        'phpdoc_scalar' => true,
        'phpdoc_separation' => true,
        'phpdoc_single_line_var_spacing' => true,
        'phpdoc_summary' => true,
        'phpdoc_to_comment' => false,
        'phpdoc_trim' => true,
        'phpdoc_types' => true,
        'phpdoc_types_order' => [
            'null_adjustment' => 'always_first',
            'sort_algorithm' => 'alpha',
        ],
        'phpdoc_var_without_name' => true,
        'pow_to_exponentiation' => true,
        'pre_increment' => true,
        'protected_to_private' => true,
        'psr0' => false,
        'psr4' => true,
        'random_api_migration' => [
            'replacements' => [
                'getrandmax' => 'mt_getrandmax',
                'rand' => 'mt_rand',
                'srand' => 'mt_srand',
            ],
        ],
        'return_type_declaration' => [
            'space_before' => 'none',
        ],
        'self_accessor' => true,
        'semicolon_after_instruction' => true,
        'short_scalar_cast' => true,
        'silenced_deprecation_error' => false,
        'simplified_null_return' => false,
        'single_blank_line_at_eof' => true,
        'single_blank_line_before_namespace' => true,
        'single_class_element_per_statement' => [
            'elements' => [
                'const',
                'property',
            ],
        ],
        'single_import_per_statement' => true,
        'single_line_after_imports' => true,
        'single_line_comment_style' => false,
        'single_quote' => true,
        'space_after_semicolon' => true,
        'standardize_not_equals' => true,
        'strict_comparison' => false,
        'strict_param' => false,
        'switch_case_semicolon_to_colon' => true,
        'switch_case_space' => true,
        'ternary_operator_spaces' => true,
        'ternary_to_null_coalescing' => true,
        'trailing_comma_in_multiline_array' => true,
        'trim_array_spaces' => true,
        'unary_operator_spaces' => true,
        'visibility_required' => [
            'const',
            'method',
            'property',
        ],
        'void_return' => true,
        'whitespace_after_comma_in_array' => true,
    ])
    ->setFinder($finder);
